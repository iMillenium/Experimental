//---------------------------------------------------------
//     _____                           
//    / ____|                          
//   | |     _ __ ___  _ __  _   _ ___ 
//   | |    | '__/ _ \| '_ \| | | / __|
//   | |____| | | (_) | | | | |_| \__ \
//    \_____|_|  \___/|_| |_|\__,_|___/
//
//----- http://forum.cronus-emulator.com/
//----- Descrição: ----------------------------------------
// Arquivo de configuração da batalha campal
// Traduzido por mkbu95
//---------------------------------------------------------
//= Fields (Incompleto)
//= arenas: ({
//=		//- 'allowedTypes' define o tipo de aplicação que a arena irá aceitar, a configuração não é case sensitive e não há problemas com espaços em branco.
//= 		allowedTypes: "Solo | Party" //A arena aceita entradas solo e grupo.
//=     	allowedTypes: "guild|party" //A arena aceita entradas em guild e grupo.
//=		allowedTypes: "All" //A arena aceita entradas solo, guild e grupo.
//=		//- fillAnnounce (parâmetro opcional da arena)
//= })
battlegrounds: (
{
	/* funcionalidade incompleta */
	feature_off:true
	/* variável de personagem para delay global da batalha campal */
	global_delay_var: "BG_Delay_Tick"
	/* quantos segundos para considerar um jogador "afk" e removê-lo da partida? */
	maximum_afk_seconds: 30
		
	/* você pode adicionar quantas arenas aqui */
	/* para arenas personalizadas, você precisará editar o arquivo "lua files/entryqueue/entryqueuelist.lua" na sua data */
	arenas: ({
		name: "Tierra Gorge" //deve ser IGUAL ao nome do client
		event: "Tierra_BG2::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 80
		maxLevel: 150
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 3
			loss: 1
			draw: 1
		}
		minPlayers: 6 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 6 /* quantidade mínima de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "Tierra_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "Flavius" //deve ser IGUAL ao nome do client
		event: "start#bat_b01::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 80
		maxLevel: 150
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 9
			loss: 3
			draw: 3
		}
		minPlayers: 2 /* mínimo de jogadores para começar a partida (VALOR TEMPORÁRIO, VOLTAR AO NORMAL) */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 6 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "Flavius_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "KVM (Level 80 and up)" //deve ser IGUAL ao nome do client
		event: "KvM03_BG::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 80
		maxLevel: 150
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 5
			loss: 1
			draw: 1
		}
		minPlayers: 4 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 5 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "KVM_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "KVM (Level 60~79)" //deve ser IGUAL ao nome do client
		event: "KvM03_BG::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 60
		maxLevel: 79
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 2
			loss: 0
			draw: 1
		}
		minPlayers: 4 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 5 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "KVM_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "KVM (Level 59 and below)" //deve ser IGUAL ao nome do client
		event: "KvM03_BG::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 1
		maxLevel: 59
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 1
			loss: 0
			draw: 0
		}
		minPlayers: 4 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 5 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "KVM_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	}
	)
})
