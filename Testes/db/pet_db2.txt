//---------------------------------------------------------
//     _____                           
//    / ____|                          
//   | |     _ __ ___  _ __  _   _ ___ 
//   | |    | '__/ _ \| '_ \| | | / __|
//   | |____| | | (_) | | | | |_| \__ \
//    \_____|_|  \___/|_| |_|\__,_|___/
//
//----- http://forum.cronus-emulator.com/
//----- Descrição: ----------------------------------------
// Banco de Dados dos Bichinhos de Estimação Adicionais
//---------------------------------------------------------
// Estrutura do banco de dados:
// MobID,Nome,JNome,CapturaID,OvoID,EquipID,ComidaID,Fullness,DelayFome,R_Hungry,R_Full,LInicial,LMorte,Captura,Velocidade,S_Performance,OpcaoFala,ChanceAtaque,ChanceDefesa,ChanceMudarAlvo,PetScript,LealScript
//
// 01. MobID ID do bicho de estimação.
// 02. Nome Nome do bichinho a ser definido no banco de dados.
// 03. JNome O nome de exibição após o ovo ser chocado.
// 04. CapturaID ID do Item de Captura.
// 05. OvoID ID do Ovo de Estimação.
// 06. EquipID ID do Acessório do Bichinho.
// 07. ComidaID ID da Comida.
// 08. Fullness A quantidade de Fome decrescida a cada [HungryDelay] segundos.
// 09. DelayFome Tempo para que a Fome seja reduzida em [Fullness] após alimentar o bichinho. (Padrão: 60s)
// 10. R_Hungry Quantidade de Lealdade acrescida após alimentar.
// 11. R_Full Quantidade de Lealdade descrescida após alimentar exageradamente.
// 12. LInicial Quantidade de Lealdade inicial do bichinho.
// 13. LMorte Quantidade de Lealdade decrescida quando o dono morre.
// 14. Captura Chance de captura (100 = 1%).
// 15. Velocidade Velocidade de movimento. (Padrão: 150)
// 16. S_Performance Performance Especial. (Sim = 1, Não = 0)
// 17. OpcaoFala Desabilita fala do animal (invés de falar eles usam o emotion /!.)
// 18. ChanceAtaque Chance de que o bichinho ataque (exige pelo menos lealdade de [pet_support_min_friendly (definido na battle)].
// 19. ChanceDefesa Chance de que o bichinho revide quando o dono esteje sendo atacado (exige pelo menos lealdade de [pet_support_min_friendly (definido na battle)].
// 20. ChanceMudarAlvo Chance de que o bichinho mude seu alvo de ataque.
// 21. PetScript Script ao ser executado quando o ovo do bichinho é chocado.
// 22. LealScript Script ao ser executado quando o bichinho atinge certo nível de lealdade (exige pelo menos lealdade de [pet_support_min_friendly (definido na battle)]).
//
// NOTA: The max value (100%) of attack_rate, defense_rate & change_target_rate is 10000.
//
// Em teoria, pode-se usar qualquer script, mas é recomendado que se use um destes:
// petskillattack skillid, skilllv, rate, bonusrate
// Skills que podem ser ativadas quando o pet está atacando. A taxa (rate) é a chance de execução por ataque.
// Bonusrate é uma chance de sucesso adicional quando a lealdade está no máximo.
//
// petskillattack2 skillid, damage, hits, rate, bonusrate
// Igual ao petskillattack, mas o dano e número de hits é fixo.
// O dano especificado é total e não por hit.
//
// petskillsupport skillid, skilllv, delay, hp%, sp%
// Conjura uma skill de suporte quando a saúde (HP) está abaixo da porcentagem de HP/SP especificados.
// O delay é o tempo minimo em segundos para que a skill possa ser conjurada novamente.
//
// petheal amount, delay, hp%, sp%
// Similar to petskillsupport, but the skill is fixed to heal (28) and the
// heal-amount is fixed to the value given.
//
// petrecovery type, delay: Cures the "type" status effect after "delay" seconds
//
// petskillbonus type, value, duration, delay
// Gives bonus stats. Type is the stat to increase (bStr, bLuk), value is the
// amount by which it is increased, duration signals how long the bonus lasts
// delay is the time elapsed after the bonus ends and before it starts again.
//---------------------------------------------------------